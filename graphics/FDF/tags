!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AR	libft/Makefile	/^AR= ar$/;"	m
ARFLAGS	libft/Makefile	/^ARFLAGS= rcs$/;"	m
B	project/libfdf.h	41;"	d
BACKSPACE	project/libfdf.h	37;"	d
BUFF_SIZE	libft/io/get_next_line.h	17;"	d
BUFF_SIZE	libft/string/get_next_line.h	5;"	d
CC	libft/Makefile	/^CC= gcc$/;"	m
CC	minilibx/Makefile.mk	/^CC	= gcc$/;"	m
CC	minilibx/test/Makefile.mk	/^CC=gcc$/;"	m
CC	project/Makefile	/^CC=gcc$/;"	m
CFLAGS	libft/Makefile	/^CFLAGS= -Wall -Werror -Wextra -O3 -I .$/;"	m
CFLAGS	minilibx/Makefile.mk	/^CFLAGS	= -O3 -I$(INC)$/;"	m
CFLAGS	minilibx/test/Makefile.mk	/^CFLAGS= -I$(INC) -O3 -I..$/;"	m
CFLAGS	project/Makefile	/^CFLAGS= -Wall -Werror -Wextra -O3 -I ..\/libft -I .$/;"	m
DEPTH	project/libfdf.h	43;"	d
DOCP	minilibx/Makefile.mk	/^DOCP	=%%%%$/;"	m
DOWN	project/libfdf.h	36;"	d
ENTER	project/libfdf.h	38;"	d
ENV_DISPLAY	minilibx/mlx_int.h	39;"	d
ERROR	libft/io/get_next_line.h	18;"	d
ERROR	libft/string/get_next_line.h	6;"	d
ERR_NO_TRUECOLOR	minilibx/mlx_int.h	41;"	d
ESC	project/libfdf.h	46;"	d
FALSE	project/libfdf.h	26;"	d
G	project/libfdf.h	40;"	d
GET_NEXT_LINE_H	libft/io/get_next_line.h	14;"	d
GET_NEXT_LINE_H	libft/string/get_next_line.h	2;"	d
HEIGHT	project/libfdf.h	23;"	d
HT	minilibx/Makefile.mk	/^HT	=%%%%$/;"	m
IM1_SX	minilibx/test/main.c	7;"	d	file:
IM1_SY	minilibx/test/main.c	8;"	d	file:
IM3_SX	minilibx/test/main.c	9;"	d	file:
IM3_SY	minilibx/test/main.c	10;"	d	file:
INC	minilibx/Makefile.mk	/^INC	=%%%%$/;"	m
INC	minilibx/test/Makefile.mk	/^INC=%%%%$/;"	m
INCLIB	minilibx/test/Makefile.mk	/^INCLIB=$(INC)\/..\/lib$/;"	m
LEFT	project/libfdf.h	33;"	d
LIBFDF_H	project/libfdf.h	14;"	d
LIBFT	project/Makefile	/^LIBFT= -L..\/libft -lft$/;"	m
LIBFT_H	libft/libft.h	14;"	d
LIBPRINTF_H	libft/printf/libprintf.h	14;"	d
LOCALHOST	minilibx/mlx_int.h	40;"	d
MAJ	project/libfdf.h	44;"	d
MATH	project/Makefile	/^MATH= -lm$/;"	m
MFLAGS	project/Makefile	/^MFLAGS= -L..\/minilibx -lmlx_Linux -L\/usr\/X11\/lib -lXext -lX11$/;"	m
MLX_H	minilibx/mlx.h	32;"	d
MLX_MAX_EVENT	minilibx/mlx_int.h	36;"	d
MLX_TYPE_SHM	minilibx/mlx_int.h	33;"	d
MLX_TYPE_SHM_PIXMAP	minilibx/mlx_int.h	32;"	d
MLX_TYPE_XIMAGE	minilibx/mlx_int.h	34;"	d
NAME	libft/Makefile	/^NAME= libft.a$/;"	m
NAME	minilibx/Makefile.mk	/^NAME	= libmlx.a$/;"	m
NAME	minilibx/test/Makefile.mk	/^NAME= mlx-test$/;"	m
NAME	project/Makefile	/^NAME= ..\/FDF$/;"	m
OBJ	libft/Makefile	/^OBJ=$(subst .c,.o, $(SRC))$/;"	m
OBJ	minilibx/Makefile.mk	/^OBJ	=$(SRC:.c=.o)$/;"	m
OBJ	minilibx/test/Makefile.mk	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	project/Makefile	/^OBJ= $(subst .c,.o, $(SRC))$/;"	m
POWER	project/libfdf.h	42;"	d
R	project/libfdf.h	39;"	d
RB_RED	libft/libft.h	/^	RB_RED$/;"	e	enum:e_rb_color
RB_bLACK	libft/libft.h	/^	RB_bLACK,$/;"	e	enum:e_rb_color
RETURN	minilibx/mlx_xpm.c	17;"	d	file:
RIGHT	project/libfdf.h	35;"	d
SIZE	libft/printf/libprintf.h	22;"	d
SPACE	project/libfdf.h	32;"	d
SRC	libft/Makefile	/^SRC= 	$(addprefix string\/,$(SRC_STR))\\$/;"	m
SRC	minilibx/Makefile.mk	/^SRC	= mlx_init.c mlx_new_window.c mlx_pixel_put.c mlx_loop.c \\$/;"	m
SRC	minilibx/test/Makefile.mk	/^SRC = main.c$/;"	m
SRC	project/Makefile	/^SRC=\\$/;"	m
SRC_BTREE	libft/Makefile	/^SRC_BTREE=\\$/;"	m
SRC_IO	libft/Makefile	/^SRC_IO=\\$/;"	m
SRC_IS	libft/Makefile	/^SRC_IS=\\$/;"	m
SRC_LST	libft/Makefile	/^SRC_LST=\\$/;"	m
SRC_MATH	libft/Makefile	/^SRC_MATH=\\$/;"	m
SRC_MEM	libft/Makefile	/^SRC_MEM=\\$/;"	m
SRC_PRINTF	libft/Makefile	/^SRC_PRINTF=\\$/;"	m
SRC_STR	libft/Makefile	/^SRC_STR=\\$/;"	m
TAB	project/libfdf.h	45;"	d
THREAD	project/Makefile	/^THREAD= -pthread$/;"	m
THREAD	project/libfdf.h	24;"	d
TRUE	project/libfdf.h	25;"	d
UP	project/libfdf.h	34;"	d
WARN_SHM_ATTACH	minilibx/mlx_int.h	42;"	d
WIDTH	project/libfdf.h	22;"	d
WIN1_SX	minilibx/test/main.c	5;"	d	file:
WIN1_SY	minilibx/test/main.c	6;"	d	file:
X_ShmAttach	minilibx/mlx_new_image.c	20;"	d	file:
aux_assign_base	libft/printf/ft_conv_oux.c	/^static void	aux_assign_base(t_printf *all)$/;"	f	file:
aux_center	project/ft_v2p.c	/^static void	aux_center(t_fdf *f)$/;"	f	file:
aux_char_0	libft/printf/ft_conv_c.c	/^static void	aux_char_0(t_printf *all)$/;"	f	file:
aux_color	project/ft_fdf.c	/^int		aux_color(float a, t_fdf *f)$/;"	f
aux_conv_bin	libft/printf/ft_conv_bin.c	/^static void	aux_conv_bin(unsigned int bitwise, int binary, t_printf *all)$/;"	f	file:
aux_fill_pixel	project/ft_fdf.c	/^void	aux_fill_pixel(t_fdf *f, int x, int y, int color)$/;"	f
aux_fillmap	project/ft_getmap.c	/^static int		*aux_fillmap(char **s, t_fdf *f, int **map)$/;"	f	file:
aux_freecontent	project/ft_getmap.c	/^void			aux_freecontent(char **s, int len)$/;"	f
aux_gen_str	libft/io/ft_putwchar.c	/^static char	*aux_gen_str(size_t i, char *str, size_t chr)$/;"	f	file:
aux_init_mlx	project/main.c	/^static void	aux_init_mlx(t_fdf *f)$/;"	f	file:
aux_join	libft/io/get_next_line.c	/^static char	*aux_join(char **line, t_list *node, int max)$/;"	f	file:
aux_join	libft/string/get_next_line.c	/^char	*aux_join(char **line, t_list *node, int max)$/;"	f
aux_lstadd	libft/io/get_next_line.c	/^static int	aux_lstadd(t_list **node, char *save, int *status, int *len)$/;"	f	file:
aux_lstadd	libft/string/get_next_line.c	/^int	aux_lstadd(t_list **node, char *save, int *status, int *len)$/;"	f
aux_merge	libft/lst/ft_lst2sort.c	/^static t_list2	*aux_merge(t_list2 *l1, t_list2 *l2,$/;"	f	file:
aux_merge	libft/lst/ft_lstsort.c	/^static t_list	*aux_merge(t_list *l1, t_list *l2,$/;"	f	file:
aux_mmsearch	project/ft_v2p.c	/^static void	aux_mmsearch(t_fdf *f)$/;"	f	file:
aux_null_precision	libft/printf/ft_precision.c	/^static void	aux_null_precision(t_printf *all)$/;"	f	file:
aux_option_space	libft/printf/ft_conv_d.c	/^static	void	aux_option_space(t_printf *all)$/;"	f	file:
aux_printf	libft/printf/ft_printf.c	/^static void	aux_printf(t_printf *all, const char *restrict *format,$/;"	f	file:
aux_putls	libft/printf/ft_conv_ls.c	/^static void	aux_putls(wchar_t *str, t_printf *all)$/;"	f	file:
aux_read	project/ft_getmap.c	/^static t_list	*aux_read(char *file, t_list *list)$/;"	f	file:
aux_read_loop	libft/io/get_next_line.c	/^static int	aux_read_loop(t_list **node, char *save, const int fd, int *status)$/;"	f	file:
aux_read_loop	libft/string/get_next_line.c	/^int		aux_read_loop(t_list **node, char *save, const int fd, int *status)$/;"	f
aux_reset	project/ft_key.c	/^static int	aux_reset(t_fdf *f)$/;"	f	file:
aux_seg	project/ft_fdf.c	/^void	aux_seg(t_fdf f, t_coord a, t_coord b)$/;"	f
aux_select	libft/lst/ft_lst2sort.c	/^static t_list2	*aux_select(t_list2 **l1, t_list2 **l2,$/;"	f	file:
aux_select	libft/lst/ft_lstsort.c	/^static t_list	*aux_select(t_list **l1, t_list **l2,$/;"	f	file:
aux_slate	project/ft_key.c	/^static void	aux_slate(int key, t_fdf *f)$/;"	f	file:
aux_updown_grid	project/ft_high.c	/^static void	aux_updown_grid(t_fdf *f)$/;"	f	file:
aux_zoom	project/ft_key.c	/^static void	aux_zoom(int key, t_fdf *f)$/;"	f	file:
base	libft/printf/libprintf.h	/^	char	*base;$/;"	m	struct:s_printf
bpp	minilibx/mlx_int.h	/^  int		bpp;$/;"	m	struct:s_img
bpp	project/libfdf.h	/^	int			bpp;$/;"	m	struct:s_fdf
bpp1	minilibx/test/main.c	/^int	bpp1;$/;"	v
bpp2	minilibx/test/main.c	/^int	bpp2;$/;"	v
bpp3	minilibx/test/main.c	/^int	bpp3;$/;"	v
bpp4	minilibx/test/main.c	/^int	bpp4;$/;"	v
cmap	minilibx/mlx_int.h	/^  Colormap	cmap;$/;"	m	struct:s_xvar
col	minilibx/mlx_int.h	/^  int		col;$/;"	m	struct:s_xpm_col
color	libft/libft.h	/^	enum e_rb_color		color;$/;"	m	struct:s_rb_node	typeref:enum:s_rb_node::e_rb_color
color	minilibx/mlx_int.h	/^  int	color;$/;"	m	struct:s_col_name
color	project/libfdf.h	/^	float	color;$/;"	m	struct:s_coord3
color_map_1	minilibx/test/main.c	/^int	color_map_1(void *win,int w,int h)$/;"	f
color_map_2	minilibx/test/main.c	/^int	color_map_2(unsigned char *data,int bpp,int sl,int w,int h,int endian, int type)$/;"	f
content	libft/libft.h	/^	void			*content;$/;"	m	struct:s_list
content	libft/libft.h	/^	void			*content;$/;"	m	struct:s_list2
content_size	libft/libft.h	/^	size_t			content_size;$/;"	m	struct:s_list
content_size	libft/libft.h	/^	size_t			content_size;$/;"	m	struct:s_list2
data	libft/libft.h	/^	void				*data;$/;"	m	struct:s_rb_node
data	minilibx/mlx_int.h	/^  char		*data;$/;"	m	struct:s_img
data1	minilibx/test/main.c	/^char	*data1;$/;"	v
data2	minilibx/test/main.c	/^char	*data2;$/;"	v
data3	minilibx/test/main.c	/^char	*data3;$/;"	v
data4	minilibx/test/main.c	/^char	*data4;$/;"	v
decrgb	minilibx/mlx_int.h	/^  int		decrgb[6];$/;"	m	struct:s_xvar
depth	minilibx/mlx_int.h	/^  int		depth;$/;"	m	struct:s_xvar
display	minilibx/mlx_int.h	/^  Display	*display;$/;"	m	struct:s_xvar
do_flush	minilibx/mlx_int.h	/^  int		do_flush;$/;"	m	struct:s_xvar
e_rb_color	libft/libft.h	/^enum			e_rb_color$/;"	g
endian	project/libfdf.h	/^	int			endian;$/;"	m	struct:s_fdf
endian1	minilibx/test/main.c	/^int	endian1;$/;"	v
endian2	minilibx/test/main.c	/^int	endian2;$/;"	v
endian3	minilibx/test/main.c	/^int	endian3;$/;"	v
endian4	minilibx/test/main.c	/^int	endian4;$/;"	v
expose_hook	minilibx/mlx_int.h	/^  int			(*expose_hook)();$/;"	m	struct:s_win_list
expose_param	minilibx/mlx_int.h	/^  void			*expose_param;$/;"	m	struct:s_win_list
expose_win1	minilibx/test/main.c	/^int	expose_win1(void *p)$/;"	f
expose_win2	minilibx/test/main.c	/^int	expose_win2(void *p)$/;"	f
fct	libft/printf/libprintf.h	/^	char	*(*fct)(va_list *, t_printf *);$/;"	m	struct:s_conv
fct	libft/printf/libprintf.h	/^	void	(*fct)(const char **, t_printf*);$/;"	m	struct:s_option
format	minilibx/mlx_int.h	/^  int		format;$/;"	m	struct:s_img
ft_abs	libft/math/ft_abs.c	/^inline int	ft_abs(int n)$/;"	f
ft_array_search	libft/string/ft_array_search.c	/^int	ft_array_search(char *search, char **array)$/;"	f
ft_atoi	libft/string/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f
ft_btrcount	libft/btree/ft_btrcount.c	/^int	ft_btrcount(t_btree *root)$/;"	f
ft_btrinsert	libft/btree/ft_btrinsert.c	/^int	ft_btrinsert(t_btree **root, void *item, int (*cmpf)(void *, void *))$/;"	f
ft_btriterin	libft/btree/ft_btriterin.c	/^void	ft_btriterin(t_btree *root, void (*f)(void *))$/;"	f
ft_btriterpre	libft/btree/ft_btriterpre.c	/^void	ft_btriterpre(t_btree *root, void (*f)(void *))$/;"	f
ft_btritersu	libft/btree/ft_btritersu.c	/^void	ft_btritersu(t_btree *root, void (*f)(void *))$/;"	f
ft_btrnew	libft/btree/ft_btrnew.c	/^t_btree	*ft_btrnew(void *item)$/;"	f
ft_btrsearch	libft/btree/ft_btrsearch.c	/^t_btree	*ft_btrsearch(t_btree *root, void *data_ref,$/;"	f
ft_bzero	libft/mem/ft_bzero.c	/^void	ft_bzero(void *s, size_t len)$/;"	f
ft_cadd	libft/math/ft_cadd.c	/^t_coord	ft_cadd(t_coord z1, t_coord z2)$/;"	f
ft_ccos	libft/math/ft_ccos.c	/^t_coord	ft_ccos(t_coord z)$/;"	f
ft_cdiv	libft/math/ft_cdiv.c	/^t_coord	ft_cdiv(t_coord dividende, t_coord diviseur)$/;"	f
ft_cmult	libft/math/ft_cmult.c	/^t_coord	ft_cmult(t_coord z1, t_coord z2)$/;"	f
ft_conj	libft/math/ft_conj.c	/^t_coord	ft_conj(t_coord z)$/;"	f
ft_conv_bin	libft/printf/ft_conv_bin.c	/^char		*ft_conv_bin(va_list *arg_var, t_printf *all)$/;"	f
ft_conv_c	libft/printf/ft_conv_c.c	/^char		*ft_conv_c(va_list *arg_var, t_printf *all)$/;"	f
ft_conv_d	libft/printf/ft_conv_d.c	/^char			*ft_conv_d(va_list *ap, t_printf *all)$/;"	f
ft_conv_else	libft/printf/ft_conv_else.c	/^char		*ft_conv_else(va_list *ap, t_printf *all)$/;"	f
ft_conv_index	libft/printf/ft_conv_index.c	/^void	ft_conv_index(const char **f, t_printf *all)$/;"	f
ft_conv_lbin	libft/printf/ft_conv_bin.c	/^char		*ft_conv_lbin(va_list *arg_var, t_printf *all)$/;"	f
ft_conv_lc	libft/printf/ft_conv_lc.c	/^char	*ft_conv_lc(va_list *arg_var, t_printf *all)$/;"	f
ft_conv_ls	libft/printf/ft_conv_ls.c	/^char		*ft_conv_ls(va_list *arg_var, t_printf *all)$/;"	f
ft_conv_oux	libft/printf/ft_conv_oux.c	/^char		*ft_conv_oux(va_list *ap, t_printf *all)$/;"	f
ft_conv_p	libft/printf/ft_conv_p.c	/^char	*ft_conv_p(va_list *ap, t_printf *all)$/;"	f
ft_conv_percent	libft/printf/ft_conv_percent.c	/^char		*ft_conv_percent(va_list *arg_var, t_printf *all)$/;"	f
ft_conv_s	libft/printf/ft_conv_s.c	/^char		*ft_conv_s(va_list *arg_var, t_printf *all)$/;"	f
ft_coord	libft/math/ft_coord.c	/^t_coord	ft_coord(double x, double y)$/;"	f
ft_count	libft/string/ft_count.c	/^size_t	ft_count(char **av)$/;"	f
ft_count_word	libft/string/ft_strsplit.c	/^static int	ft_count_word(const char *s, char c)$/;"	f	file:
ft_countchr	libft/string/ft_countchr.c	/^size_t	ft_countchr(char *str, char search)$/;"	f
ft_countnchr	libft/string/ft_countnchr.c	/^size_t	ft_countnchr(char *str, int len, char search)$/;"	f
ft_cpow	libft/math/ft_cpow.c	/^t_coord	ft_cpow(t_coord z, int n)$/;"	f
ft_cremove	libft/math/ft_cremove.c	/^t_coord	ft_cremove(t_coord z1, t_coord z2)$/;"	f
ft_d_size_	libft/printf/ft_d_size_2.c	/^char	*ft_d_size_(va_list *ap, t_printf *all)$/;"	f
ft_d_size_h	libft/printf/ft_d_size_1.c	/^char	*ft_d_size_h(va_list *ap, t_printf *all)$/;"	f
ft_d_size_hh	libft/printf/ft_d_size_1.c	/^char	*ft_d_size_hh(va_list *ap, t_printf *all)$/;"	f
ft_d_size_j	libft/printf/ft_d_size_1.c	/^char	*ft_d_size_j(va_list *ap, t_printf *all)$/;"	f
ft_d_size_l	libft/printf/ft_d_size_1.c	/^char	*ft_d_size_l(va_list *ap, t_printf *all)$/;"	f
ft_d_size_ll	libft/printf/ft_d_size_1.c	/^char	*ft_d_size_ll(va_list *ap, t_printf *all)$/;"	f
ft_d_size_z	libft/printf/ft_d_size_2.c	/^char	*ft_d_size_z(va_list *ap, t_printf *all)$/;"	f
ft_del	libft/lst/ft_del.c	/^void	ft_del(void *s, size_t i)$/;"	f
ft_factorial	libft/math/ft_factorial.c	/^int	ft_factorial(int k)$/;"	f
ft_fdf	project/ft_fdf.c	/^void	ft_fdf(t_fdf f)$/;"	f
ft_fdfvdot	project/ft_fdfvdot.c	/^void	ft_fdfvdot(t_coord **m, t_fdf *f)$/;"	f
ft_freegrid	project/ft_freegrid.c	/^void	ft_freegrid(t_fdf *f)$/;"	f
ft_getmap	project/ft_getmap.c	/^int				**ft_getmap(char *file, t_fdf *f)$/;"	f
ft_hash	libft/printf/ft_hash.c	/^char		*ft_hash(t_printf *all)$/;"	f
ft_high	project/ft_high.c	/^int			ft_high(int key, t_fdf *f)$/;"	f
ft_inc_acc	libft/printf/ft_inc_was.c	/^void	ft_inc_acc(const char **format, t_printf *all)$/;"	f
ft_inc_size	libft/printf/ft_inc_was.c	/^void	ft_inc_size(const char **format, t_printf *all)$/;"	f
ft_inc_width	libft/printf/ft_inc_was.c	/^void	ft_inc_width(const char **format, t_printf *all)$/;"	f
ft_init	project/ft_reset.c	/^void	ft_init(t_coord *p)$/;"	f
ft_isalnum	libft/istest/ft_isalnum.c	/^int		ft_isalnum(int c)$/;"	f
ft_isalpha	libft/istest/ft_isalpha.c	/^int		ft_isalpha(int c)$/;"	f
ft_isascii	libft/istest/ft_isascii.c	/^int		ft_isascii(int c)$/;"	f
ft_isdigit	libft/istest/ft_isdigit.c	/^int		ft_isdigit(int c)$/;"	f
ft_isinteger	libft/istest/ft_isinteger.c	/^int	ft_isinteger(char *str)$/;"	f
ft_islower	libft/istest/ft_islower.c	/^int		ft_islower(int c)$/;"	f
ft_isprime	libft/istest/ft_isprime.c	/^int		ft_isprime(int n)$/;"	f
ft_isprint	libft/istest/ft_isprint.c	/^int		ft_isprint(int c)$/;"	f
ft_isupper	libft/istest/ft_isupper.c	/^int		ft_isupper(int c)$/;"	f
ft_itoa	libft/string/ft_itoa.c	/^char			*ft_itoa(intmax_t n)$/;"	f
ft_itoa_base	libft/string/ft_itoa_base.c	/^char	*ft_itoa_base(uintmax_t n, const char *base)$/;"	f
ft_key	project/ft_key.c	/^int			ft_key(int key, t_fdf *f)$/;"	f
ft_keyrot	project/ft_keyrot.c	/^void	ft_keyrot(int key, t_fdf *f, t_coord *(*funct)(t_fdf *f))$/;"	f
ft_lst2add	libft/lst/ft_lst2add.c	/^void	ft_lst2add(t_list2 **last, t_list2 *new)$/;"	f
ft_lst2cpy	libft/lst/ft_lst2cpy.c	/^t_list2	*ft_lst2cpy(t_list2 *src)$/;"	f
ft_lst2del	libft/lst/ft_lst2del.c	/^t_list2	*ft_lst2del(t_list2 **last, void (*del)(void *, size_t))$/;"	f
ft_lst2delone	libft/lst/ft_lst2delone.c	/^void	ft_lst2delone(t_list2 **last, void (*del)(void *, size_t))$/;"	f
ft_lst2end	libft/lst/ft_lst2end.c	/^t_list2	*ft_lst2end(t_list2 *list2)$/;"	f
ft_lst2insert	libft/lst/ft_lst2insert.c	/^t_list2	*ft_lst2insert(t_list2 *list, t_list2 *element)$/;"	f
ft_lst2iter	libft/lst/ft_lst2iter.c	/^void	ft_lst2iter(t_list2 *lst2, void (*f)(t_list2 *elem))$/;"	f
ft_lst2lcpy	libft/lst/ft_lst2lcpy.c	/^t_list2	*ft_lst2lcpy(t_list2 *src, int len)$/;"	f
ft_lst2len	libft/lst/ft_lst2len.c	/^size_t	ft_lst2len(t_list2 *list2)$/;"	f
ft_lst2map	libft/lst/ft_lst2map.c	/^t_list2	*ft_lst2map(t_list2 *lst2, t_list2 *(*f)(t_list2 *elem))$/;"	f
ft_lst2new	libft/lst/ft_lst2new.c	/^t_list2	*ft_lst2new(void const *content, size_t content_size)$/;"	f
ft_lst2pop	libft/lst/ft_lst2pop.c	/^t_list2	*ft_lst2pop(t_list2 *search, t_list2 *list2)$/;"	f
ft_lst2print	libft/lst/ft_lst2print.c	/^void	ft_lst2print(t_list2 *lst2)$/;"	f
ft_lst2printl	libft/lst/ft_lst2print.c	/^void	ft_lst2printl(t_list2 *lst2, int len)$/;"	f
ft_lst2sort	libft/lst/ft_lst2sort.c	/^t_list2			*ft_lst2sort(t_list2 *l1, int (*f)(t_list2 *node1,$/;"	f
ft_lst2swap	libft/lst/ft_lst2swap.c	/^void	ft_lst2swap(t_list2 *node1, t_list2 *node2)$/;"	f
ft_lstadd	libft/lst/ft_lstadd.c	/^void	ft_lstadd(t_list **last, t_list *new)$/;"	f
ft_lstcpy	libft/lst/ft_lstcpy.c	/^t_list	*ft_lstcpy(t_list *src)$/;"	f
ft_lstdel	libft/lst/ft_lstdel.c	/^t_list	*ft_lstdel(t_list **last, void (*del)(void *, size_t))$/;"	f
ft_lstdelone	libft/lst/ft_lstdelone.c	/^void	ft_lstdelone(t_list **last, void (*del)(void *, size_t))$/;"	f
ft_lstend	libft/lst/ft_lstend.c	/^t_list	*ft_lstend(t_list *list)$/;"	f
ft_lstinsert	libft/lst/ft_lstinsert.c	/^t_list	*ft_lstinsert(t_list *list, t_list *element)$/;"	f
ft_lstiter	libft/lst/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(t_list *elem))$/;"	f
ft_lstlcpy	libft/lst/ft_lstlcpy.c	/^t_list	*ft_lstlcpy(t_list *src, int len)$/;"	f
ft_lstlen	libft/lst/ft_lstlen.c	/^size_t	ft_lstlen(t_list *list)$/;"	f
ft_lstmap	libft/lst/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, t_list *(*f)(t_list *elem))$/;"	f
ft_lstnew	libft/lst/ft_lstnew.c	/^t_list	*ft_lstnew(void const *content, size_t content_size)$/;"	f
ft_lstpop	libft/lst/ft_lstpop.c	/^t_list	*ft_lstpop(t_list *search, t_list *list)$/;"	f
ft_lstprint	libft/lst/ft_lstprint.c	/^void	ft_lstprint(t_list *lst)$/;"	f
ft_lstprintl	libft/lst/ft_lstprint.c	/^void	ft_lstprintl(t_list *lst, int len)$/;"	f
ft_lstsort	libft/lst/ft_lstsort.c	/^t_list			*ft_lstsort(t_list *l1, int (*f)(t_list *node1, t_list *node2))$/;"	f
ft_lstswap	libft/lst/ft_lstswap.c	/^void	ft_lstswap(t_list *node1, t_list *node2)$/;"	f
ft_max	libft/math/ft_max.c	/^intmax_t	ft_max(intmax_t a, intmax_t b)$/;"	f
ft_memalloc	libft/mem/ft_memalloc.c	/^void	*ft_memalloc(size_t size)$/;"	f
ft_memccpy	libft/mem/ft_memccpy.c	/^void	*ft_memccpy(void *dst, const void *src, int c, size_t n)$/;"	f
ft_memchr	libft/mem/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f
ft_memcmp	libft/mem/ft_memcmp.c	/^int		ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcpy	libft/mem/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f
ft_memdel	libft/mem/ft_memdel.c	/^void	ft_memdel(void **ap)$/;"	f
ft_memmove	libft/mem/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f
ft_memset	libft/mem/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/;"	f
ft_min	libft/math/ft_min.c	/^intmax_t	ft_min(intmax_t a, intmax_t b)$/;"	f
ft_mkgrid	project/ft_mkgrid.c	/^int		ft_mkgrid(t_fdf *f)$/;"	f
ft_multmat	project/ft_multmat.c	/^t_coord	*ft_multmat(float a, float b, float c)$/;"	f
ft_nextprime	libft/math/ft_nextprime.c	/^int		ft_nextprime(int n)$/;"	f
ft_norme	libft/math/ft_norme.c	/^double	ft_norme(double x, double y)$/;"	f
ft_option	libft/printf/ft_option.c	/^int	ft_option(const char **format, t_printf *all)$/;"	f
ft_oux_size	libft/printf/ft_oux_size_1.c	/^char	*ft_oux_size(uintmax_t nbr, t_printf *all)$/;"	f
ft_oux_size_	libft/printf/ft_oux_size_2.c	/^char	*ft_oux_size_(va_list *ap, t_printf *all)$/;"	f
ft_oux_size_h	libft/printf/ft_oux_size_1.c	/^char	*ft_oux_size_h(va_list *ap, t_printf *all)$/;"	f
ft_oux_size_hh	libft/printf/ft_oux_size_1.c	/^char	*ft_oux_size_hh(va_list *ap, t_printf *all)$/;"	f
ft_oux_size_j	libft/printf/ft_oux_size_2.c	/^char	*ft_oux_size_j(va_list *ap, t_printf *all)$/;"	f
ft_oux_size_l	libft/printf/ft_oux_size_1.c	/^char	*ft_oux_size_l(va_list *ap, t_printf *all)$/;"	f
ft_oux_size_ll	libft/printf/ft_oux_size_1.c	/^char	*ft_oux_size_ll(va_list *ap, t_printf *all)$/;"	f
ft_oux_size_z	libft/printf/ft_oux_size_2.c	/^char	*ft_oux_size_z(va_list *ap, t_printf *all)$/;"	f
ft_plus	libft/printf/ft_plus.c	/^char		*ft_plus(t_printf *all)$/;"	f
ft_pow	libft/math/ft_pow.c	/^int		ft_pow(int nb, int power)$/;"	f
ft_precision_digit	libft/printf/ft_precision.c	/^char		*ft_precision_digit(t_printf *all)$/;"	f
ft_precision_str	libft/printf/ft_precision.c	/^char		*ft_precision_str(t_printf *all)$/;"	f
ft_printf	libft/printf/ft_printf.c	/^int			ft_printf(const char *restrict format, ...)$/;"	f
ft_printmap	project/ft_printmap.c	/^void	ft_printmap(t_fdf *f)$/;"	f
ft_putchar	libft/io/ft_putchar.c	/^inline size_t	ft_putchar(char d)$/;"	f
ft_putchar_fd	libft/io/ft_putchar_fd.c	/^inline size_t	ft_putchar_fd(char c, int fd)$/;"	f
ft_putendl	libft/io/ft_putendl.c	/^inline size_t	ft_putendl(const char *s)$/;"	f
ft_putendl_fd	libft/io/ft_putendl_fd.c	/^inline size_t	ft_putendl_fd(const char *s, int fd)$/;"	f
ft_putnbr	libft/io/ft_putnbr.c	/^size_t	ft_putnbr(int n)$/;"	f
ft_putnbr_fd	libft/io/ft_putnbr_fd.c	/^size_t	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putnwchar	libft/io/ft_putnwchar.c	/^size_t		ft_putnwchar(wchar_t *str, size_t n)$/;"	f
ft_putstr	libft/io/ft_putstr.c	/^inline size_t	ft_putstr(const char *s)$/;"	f
ft_putstr_fd	libft/io/ft_putstr_fd.c	/^inline size_t	ft_putstr_fd(const	char *s, int fd)$/;"	f
ft_putwchar	libft/io/ft_putwchar.c	/^size_t		ft_putwchar(size_t chr)$/;"	f
ft_putwstr	libft/io/ft_putwstr.c	/^size_t	ft_putwstr(wchar_t *str)$/;"	f
ft_reset	libft/string/ft_strjoin.c	/^static void	ft_reset(int *i, int *j)$/;"	f	file:
ft_reset	project/ft_reset.c	/^void	ft_reset(t_fdf *f)$/;"	f
ft_rotx	project/ft_rotmat.c	/^t_coord	*ft_rotx(t_fdf *f)$/;"	f
ft_roty	project/ft_rotmat.c	/^t_coord	*ft_roty(t_fdf *f)$/;"	f
ft_rotz	project/ft_rotmat.c	/^t_coord	*ft_rotz(t_fdf *f)$/;"	f
ft_slate	project/ft_slatemat.c	/^t_coord	*ft_slate(float a, float b, float c)$/;"	f
ft_sqrt	libft/math/ft_sqrt.c	/^int		ft_sqrt(int n)$/;"	f
ft_strcat	libft/string/ft_strcat.c	/^char	*ft_strcat(char *dest, const char *src)$/;"	f
ft_strchr	libft/string/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f
ft_strclr	libft/string/ft_strclr.c	/^void	ft_strclr(char *s)$/;"	f
ft_strcmp	libft/string/ft_strcmp.c	/^int		ft_strcmp(const char *s1, const char *s2)$/;"	f
ft_strcpy	libft/string/ft_strcpy.c	/^char	*ft_strcpy(char *dst, const char *src)$/;"	f
ft_strdel	libft/string/ft_strdel.c	/^void	ft_strdel(char **as)$/;"	f
ft_strdup	libft/string/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f
ft_strequ	libft/string/ft_strequ.c	/^int	ft_strequ(char const *s1, char const *s2)$/;"	f
ft_striter	libft/string/ft_striter.c	/^void	ft_striter(char *s, void (*f)(char *))$/;"	f
ft_striteri	libft/string/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f
ft_strjoin	libft/string/ft_strjoin.c	/^char		*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strlcat	libft/string/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t size)$/;"	f
ft_strlen	libft/string/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/;"	f
ft_strmap	libft/string/ft_strmap.c	/^char	*ft_strmap(char const *s, char (*f)(char))$/;"	f
ft_strmapi	libft/string/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strncat	libft/string/ft_strncat.c	/^char	*ft_strncat(char *s1, const char *s2, size_t n)$/;"	f
ft_strncmp	libft/string/ft_strncmp.c	/^int		ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strncpy	libft/string/ft_strncpy.c	/^char	*ft_strncpy(char *dst, const char *src, size_t len)$/;"	f
ft_strndup	libft/string/ft_strndup.c	/^char	*ft_strndup(const char *s1, size_t n)$/;"	f
ft_strnequ	libft/string/ft_strnequ.c	/^int		ft_strnequ(char const *s1, char const *s2, size_t n)$/;"	f
ft_strnew	libft/string/ft_strnew.c	/^char	*ft_strnew(size_t size)$/;"	f
ft_strnew_ch	libft/string/ft_strnew_ch.c	/^char	*ft_strnew_ch(size_t size, char c)$/;"	f
ft_strnstr	libft/string/ft_strnstr.c	/^char	*ft_strnstr(const char *big, const char *little, size_t len)$/;"	f
ft_strrchr	libft/string/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f
ft_strsplit	libft/string/ft_strsplit.c	/^char		**ft_strsplit(char const *s, char c)$/;"	f
ft_strstr	libft/string/ft_strstr.c	/^char	*ft_strstr(const char *big, const char *little)$/;"	f
ft_strsub	libft/string/ft_strsub.c	/^char	*ft_strsub(char const *s, unsigned int start, size_t len)$/;"	f
ft_strtabiter	libft/string/ft_strtabiter.c	/^void	ft_strtabiter(char **s, void (*f)(char **), int self)$/;"	f
ft_strtrim	libft/string/ft_strtrim.c	/^char	*ft_strtrim(char const *s)$/;"	f
ft_swap	libft/math/ft_swap.c	/^void	ft_swap(intmax_t *a, intmax_t *b)$/;"	f
ft_tabsplit	libft/string/ft_strsplit.c	/^static int	ft_tabsplit(char **tab, const char *s, char c, int end)$/;"	f	file:
ft_tolower	libft/string/ft_tolower.c	/^int		ft_tolower(int c)$/;"	f
ft_toupper	libft/string/ft_toupper.c	/^int		ft_toupper(int c)$/;"	f
ft_usage_error	project/ft_usage_error.c	/^void	ft_usage_error(int a)$/;"	f
ft_v2p	project/ft_v2p.c	/^int			ft_v2p(t_fdf *f)$/;"	f
ft_wcharlen	libft/string/ft_wcharlen.c	/^size_t		ft_wcharlen(int chr)$/;"	f
ft_width	libft/printf/ft_width.c	/^char		*ft_width(t_printf *all)$/;"	f
ft_wstrlen	libft/string/ft_wstrlen.c	/^size_t	ft_wstrlen(wchar_t *str)$/;"	f
ft_zero	libft/printf/ft_zero.c	/^void		ft_zero(t_printf *all)$/;"	f
gc	minilibx/mlx_int.h	/^  GC			gc;$/;"	m	struct:s_win_list
gc	minilibx/mlx_int.h	/^  GC		gc;$/;"	m	struct:s_img
gere_mouse	minilibx/test/new_win.c	/^int gere_mouse(int x,int y,int button,void*toto)$/;"	f
get_next_line	libft/io/get_next_line.c	/^int			get_next_line(const int fd, char **line)$/;"	f
get_next_line	libft/string/get_next_line.c	/^int				get_next_line(const int fd, char **line)$/;"	f
grid	project/libfdf.h	/^	t_coord3	**grid;$/;"	m	struct:s_fdf
height	minilibx/mlx_int.h	/^  int		height;$/;"	m	struct:s_img
high	project/libfdf.h	/^	float		high;$/;"	m	struct:s_fdf
hook	minilibx/mlx_int.h	/^  int		(*hook)();$/;"	m	struct:s_event_list
hooks	minilibx/mlx_int.h	/^  t_event_list		hooks[MLX_MAX_EVENT];$/;"	m	struct:s_win_list
im1	minilibx/test/main.c	/^void    *im1;$/;"	v
im2	minilibx/test/main.c	/^void	*im2;$/;"	v
im3	minilibx/test/main.c	/^void	*im3;$/;"	v
im4	minilibx/test/main.c	/^void	*im4;$/;"	v
image	minilibx/mlx_int.h	/^  XImage	*image;$/;"	m	struct:s_img
index	libft/printf/libprintf.h	/^	size_t	index;$/;"	m	struct:s_printf
init_ft_conv	libft/printf/ft_init.c	/^void	init_ft_conv(t_conv *conv)$/;"	f
init_ft_d_size	libft/printf/ft_init.c	/^void	init_ft_d_size(t_conv *conv)$/;"	f
init_ft_oux_size	libft/printf/ft_init.c	/^void	init_ft_oux_size(t_conv *conv)$/;"	f
init_t_printf	libft/printf/ft_init.c	/^void	init_t_printf(t_printf *p)$/;"	f
item	libft/libft.h	/^	void			*item;$/;"	m	struct:s_btree
k	project/libfdf.h	/^	int			k;$/;"	m	struct:s_fdf
key_hook	minilibx/mlx_int.h	/^  int			(*key_hook)();$/;"	m	struct:s_win_list
key_param	minilibx/mlx_int.h	/^  void			*key_param;$/;"	m	struct:s_win_list
key_win1	minilibx/test/main.c	/^int	key_win1(int key,void *p)$/;"	f
key_win2	minilibx/test/main.c	/^int	key_win2(int key,void *p)$/;"	f
key_win3	minilibx/test/main.c	/^int	key_win3(int key,void *p)$/;"	f
left	libft/libft.h	/^	struct s_btree	*left;$/;"	m	struct:s_btree	typeref:struct:s_btree::s_btree
left	libft/libft.h	/^	struct s_rb_node	*left;$/;"	m	struct:s_rb_node	typeref:struct:s_rb_node::s_rb_node
len	project/libfdf.h	/^	t_coord3 	len;$/;"	m	struct:s_fdf
local_endian	minilibx/test/main.c	/^int	local_endian;$/;"	v
loop_hook	minilibx/mlx_int.h	/^  int		(*loop_hook)();$/;"	m	struct:s_xvar
loop_param	minilibx/mlx_int.h	/^  void		*loop_param;$/;"	m	struct:s_xvar
main	minilibx/test/main.c	/^int	main()$/;"	f
main	minilibx/test/new_win.c	/^int main()$/;"	f
main	project/main.c	/^int			main(int ac, char **av)$/;"	f
map	project/libfdf.h	/^	int			**map;$/;"	m	struct:s_fdf
mask	minilibx/mlx_int.h	/^  int		mask;$/;"	m	struct:s_event_list
max	project/libfdf.h	/^	t_coord3 	max;$/;"	m	struct:s_fdf
min	project/libfdf.h	/^	t_coord3 	min;$/;"	m	struct:s_fdf
mlx	minilibx/test/main.c	/^void	*mlx;$/;"	v
mlx	minilibx/test/new_win.c	/^void *mlx;$/;"	v
mlx	project/libfdf.h	/^	void		*mlx;$/;"	m	struct:s_fdf
mlx_X_error	minilibx/mlx_new_image.c	/^int	mlx_X_error;$/;"	v
mlx_clear_window	minilibx/mlx_clear_window.c	/^int		mlx_clear_window(t_xvar *xvar,t_win_list *win)$/;"	f
mlx_col_name	minilibx/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name
mlx_destroy_image	minilibx/mlx_destroy_image.c	/^int	mlx_destroy_image(t_xvar *xvar, t_img *img)$/;"	f
mlx_destroy_window	minilibx/mlx_destroy_window.c	/^int	mlx_destroy_window(t_xvar *xvar,t_win_list *win)$/;"	f
mlx_do_key_autorepeatoff	minilibx/mlx_hook.c	/^int	mlx_do_key_autorepeatoff(t_xvar *xvar)$/;"	f
mlx_do_key_autorepeaton	minilibx/mlx_hook.c	/^int	mlx_do_key_autorepeaton(t_xvar *xvar)$/;"	f
mlx_do_sync	minilibx/mlx_hook.c	/^int	mlx_do_sync(t_xvar *xvar)$/;"	f
mlx_expose_hook	minilibx/mlx_expose_hook.c	/^int		mlx_expose_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f
mlx_flush_event	minilibx/mlx_flush_event.c	/^int	mlx_flush_event(t_xvar *xvar)$/;"	f
mlx_get_color_value	minilibx/mlx_get_color_value.c	/^int             mlx_get_color_value(t_xvar *xvar,int color)$/;"	f
mlx_get_data_addr	minilibx/mlx_get_data_addr.c	/^char	*mlx_get_data_addr(t_img *img,int *bits_per_pixel,$/;"	f
mlx_hook	minilibx/mlx_hook.c	/^int	mlx_hook(t_win_list *win, int x_event, int x_mask, $/;"	f
mlx_init	minilibx/mlx_init.c	/^void		*mlx_init()$/;"	f
mlx_int_anti_resize_win	minilibx/mlx_int_anti_resize_win.c	/^int	mlx_int_anti_resize_win(t_xvar *xvar,Window win,int w,int h)$/;"	f
mlx_int_deal_shm	minilibx/mlx_init.c	/^int	mlx_int_deal_shm(t_xvar *xvar)$/;"	f
mlx_int_do_nothing	minilibx/mlx_int_do_nothing.c	/^int	mlx_int_do_nothing(void *param)$/;"	f
mlx_int_egal_img	minilibx/mlx_lib_xpm.c	/^int	mlx_int_egal_img(XImage *img1,XImage *img2)$/;"	f
mlx_int_file_get_rid_comment	minilibx/mlx_xpm.c	/^int	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f
mlx_int_get_col_name	minilibx/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f
mlx_int_get_good_color	minilibx/mlx_get_color_value.c	/^int		mlx_int_get_good_color(t_xvar *xvar,int color)$/;"	f
mlx_int_get_line	minilibx/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f
mlx_int_get_text_rgb	minilibx/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f
mlx_int_get_visual	minilibx/mlx_int_get_visual.c	/^int		mlx_int_get_visual(t_xvar *xvar)$/;"	f
mlx_int_new_image	minilibx/mlx_new_image.c	/^void	*mlx_int_new_image(t_xvar *xvar,int width, int height,int format)$/;"	f
mlx_int_new_xshm_image	minilibx/mlx_new_image.c	/^void	*mlx_int_new_xshm_image(t_xvar *xvar,int width,int height,int format)$/;"	f
mlx_int_param_ButtonPress	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_ButtonPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_ButtonRelease	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_ButtonRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_Expose	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_Expose(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_KeyPress	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_KeyPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_KeyRelease	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_KeyRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_MotionNotify	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_MotionNotify(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_event	minilibx/mlx_int_param_event.c	/^int	(*(mlx_int_param_event[]))() =$/;"	v
mlx_int_param_generic	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_generic(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_undef	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_undef()$/;"	f
mlx_int_parse_xpm	minilibx/mlx_xpm.c	/^void	*mlx_int_parse_xpm(t_xvar *xvar,void *info,int info_size,char *(*f)())$/;"	f
mlx_int_rgb_conversion	minilibx/mlx_init.c	/^int	mlx_int_rgb_conversion(t_xvar *xvar)$/;"	f
mlx_int_set_win_event_mask	minilibx/mlx_int_set_win_event_mask.c	/^int	mlx_int_set_win_event_mask(t_xvar *xvar)$/;"	f
mlx_int_static_line	minilibx/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f
mlx_int_str_str	minilibx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f
mlx_int_str_str_cote	minilibx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f
mlx_int_str_to_wordtab	minilibx/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f
mlx_int_wait_first_expose	minilibx/mlx_int_wait_first_expose.c	/^int	mlx_int_wait_first_expose(t_xvar *xvar,Window win)$/;"	f
mlx_int_xpm_f_image	minilibx/mlx_lib_xpm.c	/^void		*mlx_int_xpm_f_image(t_xvar *xvar,int *width,int *height,$/;"	f
mlx_int_xpm_set_pixel	minilibx/mlx_xpm.c	/^int	mlx_int_xpm_set_pixel(t_img *img, char *data, int opp, int col, int x)$/;"	f
mlx_key_hook	minilibx/mlx_key_hook.c	/^int		mlx_key_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f
mlx_loop	minilibx/mlx_loop.c	/^int		mlx_loop(t_xvar *xvar)$/;"	f
mlx_loop_hook	minilibx/mlx_loop_hook.c	/^int	mlx_loop_hook(t_xvar *xvar,int (*funct)(),void *param)$/;"	f
mlx_mouse_hook	minilibx/mlx_mouse_hook.c	/^int		mlx_mouse_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f
mlx_new_image	minilibx/mlx_new_image.c	/^void	*mlx_new_image(t_xvar *xvar,int width, int height)$/;"	f
mlx_new_image2	minilibx/mlx_new_image.c	/^void	*mlx_new_image2(t_xvar *xvar,int width, int height)$/;"	f
mlx_new_window	minilibx/mlx_new_window.c	/^void	*mlx_new_window(t_xvar *xvar,int size_x,int size_y,char *title)$/;"	f
mlx_pixel_put	minilibx/mlx_pixel_put.c	/^int		mlx_pixel_put(t_xvar *xvar,t_win_list *win,$/;"	f
mlx_put_image_to_window	minilibx/mlx_put_image_to_window.c	/^int	mlx_put_image_to_window(t_xvar *xvar,t_win_list *win,t_img *img,$/;"	f
mlx_string_put	minilibx/mlx_string_put.c	/^int		mlx_string_put(t_xvar *xvar,t_win_list *win,$/;"	f
mlx_xpm_file_to_image	minilibx/mlx_lib_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *filename,$/;"	f
mlx_xpm_file_to_image	minilibx/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *file,int *width,int *height)$/;"	f
mlx_xpm_to_image	minilibx/mlx_lib_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **data,int *width,int *height)$/;"	f
mlx_xpm_to_image	minilibx/mlx_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **xpm_data,int *width,int *height)$/;"	f
mouse_hook	minilibx/mlx_int.h	/^  int			(*mouse_hook)();$/;"	m	struct:s_win_list
mouse_param	minilibx/mlx_int.h	/^  void			*mouse_param;$/;"	m	struct:s_win_list
mouse_win1	minilibx/test/main.c	/^int	mouse_win1(int button,int x,int y, void *p)$/;"	f
mouse_win2	minilibx/test/main.c	/^int	mouse_win2(int button,int x,int y, void *p)$/;"	f
mouse_win3	minilibx/test/main.c	/^int	mouse_win3(int x,int y, void *p)$/;"	f
mypic	project/libfdf.h	/^	char		*mypic;$/;"	m	struct:s_fdf
n	project/libfdf.h	/^	float	n;$/;"	m	struct:s_coord3
name	minilibx/mlx_int.h	/^  char	*name;$/;"	m	struct:s_col_name
name	minilibx/mlx_int.h	/^  int		name;$/;"	m	struct:s_xpm_col
next	libft/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list::s_list
next	libft/libft.h	/^	struct s_list2	*next;$/;"	m	struct:s_list2	typeref:struct:s_list2::s_list2
next	minilibx/mlx_int.h	/^  struct s_win_list	*next;$/;"	m	struct:s_win_list	typeref:struct:s_win_list::s_win_list
option	libft/printf/libprintf.h	/^	char	option[5];$/;"	m	struct:s_printf
param	minilibx/mlx_int.h	/^  void		*param;$/;"	m	struct:s_event_list
parent	libft/libft.h	/^	struct s_rb_node	*parent;$/;"	m	struct:s_rb_node	typeref:struct:s_rb_node::s_rb_node
pas	project/libfdf.h	/^	t_coord3 	pas;$/;"	m	struct:s_fdf
pic	project/libfdf.h	/^	void		*pic;$/;"	m	struct:s_fdf
pix	minilibx/mlx_int.h	/^  Pixmap	pix;$/;"	m	struct:s_img
precision	libft/printf/libprintf.h	/^	int		precision;$/;"	m	struct:s_printf
prev	libft/libft.h	/^	struct s_list2	*prev;$/;"	m	struct:s_list2	typeref:struct:s_list2::s_list2
private_cmap	minilibx/mlx_int.h	/^  int		private_cmap;$/;"	m	struct:s_xvar
pshm_format	minilibx/mlx_int.h	/^  int		pshm_format;$/;"	m	struct:s_xvar
result	libft/printf/libprintf.h	/^	int		result;$/;"	m	struct:s_printf
right	libft/libft.h	/^	struct s_btree	*right;$/;"	m	struct:s_btree	typeref:struct:s_btree::s_btree
right	libft/libft.h	/^	struct s_rb_node	*right;$/;"	m	struct:s_rb_node	typeref:struct:s_rb_node::s_rb_node
root	minilibx/mlx_int.h	/^  Window	root;$/;"	m	struct:s_xvar
rotx	project/libfdf.h	/^	float		rotx;$/;"	m	struct:s_fdf
roty	project/libfdf.h	/^	float		roty;$/;"	m	struct:s_fdf
rotz	project/libfdf.h	/^	float		rotz;$/;"	m	struct:s_fdf
s	libft/printf/libprintf.h	/^	char	*s;$/;"	m	struct:s_option
s_btree	libft/libft.h	/^typedef struct	s_btree$/;"	s
s_col_name	minilibx/mlx_int.h	/^struct	s_col_name$/;"	s
s_conv	libft/printf/libprintf.h	/^typedef struct	s_conv$/;"	s
s_coord	libft/libft.h	/^typedef struct	s_coord$/;"	s
s_coord3	project/libfdf.h	/^typedef struct	s_coord3$/;"	s
s_event_list	minilibx/mlx_int.h	/^typedef struct	s_event_list$/;"	s
s_fdf	project/libfdf.h	/^typedef struct	s_fdf$/;"	s
s_img	minilibx/mlx_int.h	/^typedef struct	s_img$/;"	s
s_l	project/libfdf.h	/^	int			s_l;$/;"	m	struct:s_fdf
s_list	libft/libft.h	/^typedef	struct	s_list$/;"	s
s_list2	libft/libft.h	/^typedef	struct	s_list2$/;"	s
s_option	libft/printf/libprintf.h	/^typedef struct	s_option$/;"	s
s_printf	libft/printf/libprintf.h	/^typedef struct	s_printf$/;"	s
s_rb_node	libft/libft.h	/^typedef struct	s_rb_node$/;"	s
s_win_list	minilibx/mlx_int.h	/^typedef struct	s_win_list$/;"	s
s_xpm_col	minilibx/mlx_int.h	/^typedef	struct	s_xpm_col$/;"	s
s_xvar	minilibx/mlx_int.h	/^typedef struct	s_xvar$/;"	s
save_rot	project/libfdf.h	/^	t_coord3 	save_rot;$/;"	m	struct:s_fdf
screen	minilibx/mlx_int.h	/^  int		screen;$/;"	m	struct:s_xvar
shm	minilibx/mlx_int.h	/^  XShmSegmentInfo shm;$/;"	m	struct:s_img
shm_att_pb	minilibx/mlx_new_image.c	/^int	shm_att_pb(Display *d,XErrorEvent *ev)$/;"	f
size	libft/printf/libprintf.h	/^	char	size;$/;"	m	struct:s_printf
size	project/libfdf.h	/^	t_coord3	size;$/;"	m	struct:s_fdf
size_line	minilibx/mlx_int.h	/^  int		size_line;$/;"	m	struct:s_img
sl1	minilibx/test/main.c	/^int	sl1;$/;"	v
sl2	minilibx/test/main.c	/^int	sl2;$/;"	v
sl3	minilibx/test/main.c	/^int	sl3;$/;"	v
sl4	minilibx/test/main.c	/^int	sl4;$/;"	v
slate	project/libfdf.h	/^	t_coord3	slate;$/;"	m	struct:s_fdf
str	libft/printf/libprintf.h	/^	char	*str;$/;"	m	struct:s_printf
t_btree	libft/libft.h	/^}				t_btree;$/;"	t	typeref:struct:s_btree
t_conv	libft/printf/libprintf.h	/^}				t_conv;$/;"	t	typeref:struct:s_conv
t_coord	libft/libft.h	/^}				t_coord;$/;"	t	typeref:struct:s_coord
t_coord3	project/libfdf.h	/^}				t_coord3;$/;"	t	typeref:struct:s_coord3
t_event_list	minilibx/mlx_int.h	/^} t_event_list;$/;"	t	typeref:struct:s_event_list
t_fdf	project/libfdf.h	/^}				t_fdf;$/;"	t	typeref:struct:s_fdf
t_img	minilibx/mlx_int.h	/^} t_img;$/;"	t	typeref:struct:s_img
t_list	libft/libft.h	/^}				t_list;$/;"	t	typeref:struct:s_list
t_list2	libft/libft.h	/^}				t_list2;$/;"	t	typeref:struct:s_list2
t_option	libft/printf/libprintf.h	/^}				t_option;$/;"	t	typeref:struct:s_option
t_printf	libft/printf/libprintf.h	/^}				t_printf;$/;"	t	typeref:struct:s_printf
t_rb_node	libft/libft.h	/^}				t_rb_node;$/;"	t	typeref:struct:s_rb_node
t_win_list	minilibx/mlx_int.h	/^} t_win_list;$/;"	t	typeref:struct:s_win_list
t_xpm_col	minilibx/mlx_int.h	/^} t_xpm_col;$/;"	t	typeref:struct:s_xpm_col
t_xvar	minilibx/mlx_int.h	/^} t_xvar;$/;"	t	typeref:struct:s_xvar
type	minilibx/mlx_int.h	/^  int		type;$/;"	m	struct:s_img
use_xshm	minilibx/mlx_int.h	/^  int		use_xshm;$/;"	m	struct:s_xvar
visual	minilibx/mlx_int.h	/^  Visual	*visual;$/;"	m	struct:s_xvar
width	libft/printf/libprintf.h	/^	int		width;$/;"	m	struct:s_printf
width	minilibx/mlx_int.h	/^  int		width;$/;"	m	struct:s_img
win	project/libfdf.h	/^	void		*win;$/;"	m	struct:s_fdf
win1	minilibx/test/main.c	/^void	*win1;$/;"	v
win1	minilibx/test/new_win.c	/^void *win1;$/;"	v
win2	minilibx/test/main.c	/^void    *win2;$/;"	v
win2	minilibx/test/new_win.c	/^void *win2;$/;"	v
win3	minilibx/test/main.c	/^void    *win3;$/;"	v
win_list	minilibx/mlx_int.h	/^  t_win_list	*win_list;$/;"	m	struct:s_xvar
window	minilibx/mlx_int.h	/^  Window		window;$/;"	m	struct:s_win_list
x	libft/libft.h	/^	double	x;$/;"	m	struct:s_coord
x	project/libfdf.h	/^	float	x;$/;"	m	struct:s_coord3
xpm1_x	minilibx/test/main.c	/^int	xpm1_x;$/;"	v
xpm1_y	minilibx/test/main.c	/^int	xpm1_y;$/;"	v
y	libft/libft.h	/^	double	y;$/;"	m	struct:s_coord
y	project/libfdf.h	/^	float	y;$/;"	m	struct:s_coord3
z	project/libfdf.h	/^	float	z;$/;"	m	struct:s_coord3
